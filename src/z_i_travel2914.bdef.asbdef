managed;//implementation in class zbp_i_travel2914 unique;
//strict ( 1 );

define behavior for Z_I_TRAVEL2914 alias Travel
implementation in class ZBP_I_TRAVEL2914 unique
persistent table ztravel_log_2914
with additional save
lock master
authorization master ( instance )
etag master LastChangedAt
{
  field ( features : instance ) TravelId, OverallStatus;
  // administrative fields: read only //CustomerID, BeginDate, EndDate, Totalprice;
  field ( readonly ) lastChangedAt, lastChangedBy, createdAt, createdBy;
  //mandatory fields that are required to create a travel
  field ( mandatory : create ) TravelId, OverallStatus, agencyID, bookingFee, currencyCode;
  // dynamic field control
  create;
  update;
  delete;
  //Validations
  validation validateCustomer on save { create; field CustomerId; }
  validation validateDates on save { create; field BeginDate, EndDate; }
  validation validateStatus on save { create; field overallStatus; }
  //actions
  action ( features : instance ) acceptTravel result [1] $self;
  action ( features : instance ) regectTravel result [1] $self;
  action createTravelByTemplate external 'CreateTravelWithCopy' result [1] $self;
  association _Booking { create ( features : instance ); }
  mapping for ztravel_log_2914
    {
      TravelId      = travel_id;
      AgencyId      = agency_id;
      CustomerId    = customer_id;
      BeginDate     = begin_date;
      EndDate       = end_date;
      BookingFee    = booking_fee;
      TotalPrice    = total_price;
      CurrencyCode  = currency_code;
      Description   = description;
      OverallStatus = overall_status;
      CreatedBy     = created_by;
      CreatedAt     = created_at;
      LastChangedBy = last_changed_by;
      LastChangedAt = last_changed_at;
    }
 }

define behavior for Z_I_BOOK2914 alias Booking
implementation in class ZBP_I_BOOK2914 unique
persistent table zbooking_2914
lock dependent by _Tavel
//authorization dependent by _Tavel
etag master LastChangedAt
{
  field ( readonly ) TravelId;
  field ( mandatory : create ) BookingId, CarrierID, ConnectionID, FlightDate, BookingStatus;
  //BookingID,BookingDate,CustomerID,,FlightPrice,CurrencyCode,lastChangedAt  ;
  //BookingId, BookingDate,CustomerId, ConnectionID , FlightDate ,BookingStatus, FlightPrice,CurrencyCode,lastChangedAt;
  update;
  delete;
  validation validateStatus on save { create; field BookingStatus; }

  determination calculateTotalFlightPrice on modify
  { field FlightPrice, CurrencyCode; }


  mapping for zbooking_2914
    {
      TravelId      = travel_id;
      BookingId     = booking_id;
      BookingDate   = booking_date;
      CustomerId    = customer_id;
      CarrierId     = carrier_id;
      ConnectionID  = connection_id;
      FlightDate    = flight_date;
      FlightPrice   = flight_price;
      CurrencyCode  = currency_code;
      BookingStatus = booking_status;
      LastChangedAt = last_changed_at;
    }
 association _BookingSupplement { create ( features : instance ); }
  association _Tavel { }

}

define behavior for Z_I_BKSUP2914 alias Supplement
implementation in class ZBP_I_BKSUP2914 unique
with unmanaged save
lock dependent by _Travel
//authorization dependent by _Travel
etag master LastChangedAt
{
  field ( readonly ) TravelId, BookingId;
  //BookingSupplementID, SupplementID,CurrencyCode,lastChangedAt;
  field ( mandatory : create ) SupplementID, price;
  update;
  delete;

  //determinatios
  determination calculateTotalSupplPrice on modify
  { field Price, CurrencyCode; }

  mapping for zlog_2914 corresponding ; association _travel
    {
    }
 association _Booking;
}